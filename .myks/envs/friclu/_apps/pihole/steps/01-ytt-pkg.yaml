
---
---
# Source: pihole/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-custom-dnsmasq
  labels:
    app: pihole
    chart: pihole-2.27.0
    release: pihole
    heritage: Helm
data:
  02-custom.conf: |
    addn-hosts=/etc/addn-hosts
    address=/friclu/192.168.0.21
  addn-hosts: |
  05-pihole-custom-cname.conf: |
---
# Source: pihole/templates/volume-claim.yaml
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  labels:
    app: pihole
    chart: pihole-2.27.0
    component: ""
    heritage: Helm
    release: pihole
  name: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "500Mi"
---
# Source: pihole/templates/service-dns-tcp.yaml
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-tcp
  labels:
    app: pihole
    app.kubernetes.io/name: pihole
    chart: pihole-2.27.0
    release: pihole
    heritage: Helm
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - port: 53
      targetPort: dns
      protocol: TCP
      name: dns
  selector:
    app: pihole
    release: pihole
---
# Source: pihole/templates/service-dns-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-udp
  labels:
    app: pihole
    app.kubernetes.io/name: pihole
    chart: pihole-2.27.0
    release: pihole
    heritage: Helm
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - port: 53
      targetPort: dns-udp
      protocol: UDP
      name: dns-udp
  selector:
    app: pihole
    release: pihole
---
# Source: pihole/templates/service-web.yaml
apiVersion: v1
kind: Service
metadata:
  name: pihole-web
  labels:
    app: pihole
    app.kubernetes.io/name: pihole
    chart: pihole-2.27.0
    release: pihole
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app: pihole
    release: pihole
---
# Source: pihole/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  labels:
    app: pihole
    app.kubernetes.io/name: pihole
    chart: pihole-2.27.0
    release: pihole
    heritage: Helm
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: pihole
      release: pihole
  template:
    metadata:
      annotations:
        checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.dnsmasqConfig: d2061834f8d730b1096296cdc6eac20ab5e8ad149e02e93679a919a64ac1c10
        checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
      labels:
        app: pihole
        app.kubernetes.io/name: pihole
        release: pihole
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
        - 127.0.0.1
        - 8.8.8.8
      hostname: 
      hostNetwork: false
      containers:
        - name: pihole
          env:
          - name: 'WEB_PORT'
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole
          - name: 'PIHOLE_DNS_'
            value: '8.8.8.8;8.8.4.4'
          image: "pihole/pihole:2024.07.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 53
            name: dns
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort:  443
            name: https
            protocol: TCP
          - containerPort: 67
            name: client-udp
            protocol: UDP
          livenessProbe:
            httpGet:
              path: /admin/index.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /admin/index.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            failureThreshold: 10
            timeoutSeconds: 5
          volumeMounts:
          - mountPath: /etc/pihole
            name: config
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          resources:
            {}
      nodeSelector:
        kubernetes.io/hostname: friclu-1
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pihole
      - configMap:
          defaultMode: 420
          name: pihole-custom-dnsmasq
        name: custom-dnsmasq
---
# Source: pihole/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole
  labels:
    app: pihole
    chart: pihole-2.27.0
    release: pihole
    heritage: Helm
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - pihole-friclu.duckdns.org
      secretName: pihole-certificate
  rules:
    - host: "pihole-friclu.duckdns.org"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: pihole-web
                port: 
                  name: http

---
