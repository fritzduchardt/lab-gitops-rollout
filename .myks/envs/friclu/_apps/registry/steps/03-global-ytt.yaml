apiVersion: v1
kind: Secret
metadata:
  name: registry-docker-registry-secret
  namespace: registry
  labels:
    app: docker-registry
    chart: docker-registry-2.2.3
    heritage: Helm
    release: registry
type: Opaque
data:
  haSharedSecret: TUFEdWpqWjVYZ0hCOTB3VA==
  proxyUsername: ""
  proxyPassword: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-docker-registry-config
  namespace: registry
  labels:
    app: docker-registry
    chart: docker-registry-2.2.3
    heritage: Helm
    release: registry
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :5000
      debug:
        addr: :5001
        prometheus:
          enabled: false
          path: /metrics
      headers:
        X-Content-Type-Options:
        - nosniff
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    version: 0.1
---
apiVersion: v1
kind: Service
metadata:
  name: registry-docker-registry
  namespace: registry
  labels:
    app: docker-registry
    chart: docker-registry-2.2.3
    release: registry
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    name: http-80
    targetPort: 5000
  selector:
    app: docker-registry
    release: registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-docker-registry
  namespace: registry
  labels:
    app: docker-registry
    chart: docker-registry-2.2.3
    release: registry
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: registry
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: registry
      annotations:
        checksum/config: d27e7d4b51d544196ea2812b38987aed8f314a7a7a648fe5cdadb36dffb0d12d
        checksum/secret: b5abbf886281f1ef4b22cd1af93646af83f71265a00377f57d78b633aa9103b4
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: docker-registry
        image: registry:2.8.1
        imagePullPolicy: IfNotPresent
        command:
        - /bin/registry
        - serve
        - /etc/docker/registry/config.yml
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /
            port: 5000
        readinessProbe:
          httpGet:
            path: /
            port: 5000
        resources: {}
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: registry-docker-registry-secret
              key: haSharedSecret
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
        volumeMounts:
        - name: registry-docker-registry-config
          mountPath: /etc/docker/registry
        - name: data
          mountPath: /var/lib/registry/
      volumes:
      - name: registry-docker-registry-config
        configMap:
          name: registry-docker-registry-config
      - name: data
        emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-docker-registry
  namespace: registry
  labels:
    app: docker-registry
    chart: docker-registry-2.2.3
    release: registry
    heritage: Helm
  annotations: null
spec:
  ingressClassName: nginx
  rules:
  - host: registry.friclu
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: registry-docker-registry
            port:
              number: 80
---
apiVersion: v1
kind: Namespace
metadata:
  name: registry
