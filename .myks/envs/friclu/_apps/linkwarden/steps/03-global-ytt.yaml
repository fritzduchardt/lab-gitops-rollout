kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: linkwarden-postgresql
  namespace: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.4.0
    helm.sh/chart: postgresql-15.5.38
    app.kubernetes.io/component: primary
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: linkwarden
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  policyTypes:
  - Ingress
  - Egress
  egress:
  - {}
  ingress:
  - ports:
    - port: 5432
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: linkwarden-postgresql
  namespace: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.4.0
    helm.sh/chart: postgresql-15.5.38
    app.kubernetes.io/component: primary
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: linkwarden
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linkwarden-postgresql
  namespace: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.4.0
    helm.sh/chart: postgresql-15.5.38
automountServiceAccountToken: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: false
---
apiVersion: v1
kind: Secret
metadata:
  name: linkwarden-postgresql
  namespace: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.4.0
    helm.sh/chart: postgresql-15.5.38
type: Opaque
data:
  postgres-password: cG9zdGdyZXM=
  password: bGlua3dhcmRlbg==
---
apiVersion: v1
kind: Secret
metadata:
  name: linkwarden-db
  namespace: linkwarden
  labels:
    app.kubernetes.io/component: linkwarden
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  uri: cG9zdGdyZXNxbDovL2xpbmt3YXJkZW46bGlua3dhcmRlbkBsaW5rd2FyZGVuLXBvc3RncmVzcWw6NTQzMi9saW5rd2FyZGVu
---
apiVersion: v1
kind: Secret
metadata:
  name: linkwarden-s3
  namespace: linkwarden
  labels:
    app.kubernetes.io/component: linkwarden
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  accessKey: ""
  secretKey: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: linkwarden-general
  namespace: linkwarden
  labels:
    app.kubernetes.io/component: linkwarden
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
data:
  NEXTAUTH_URL: https:///api/v1/auth
  PAGINATION_TAKE_COUNT: "20"
  STORAGE_FOLDER: /data/data
  AUTOSCROLL_TIMEOUT: "30"
  RE_ARCHIVE_LIMIT: "5"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: linkwarden
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: linkwarden
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linkwarden
subjects:
- kind: ServiceAccount
  name: linkwarden
  namespace: linkwarden
---
apiVersion: v1
kind: Service
metadata:
  name: linkwarden-postgresql-hl
  namespace: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.4.0
    helm.sh/chart: postgresql-15.5.38
    app.kubernetes.io/component: primary
  annotations: null
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: linkwarden-postgresql
  namespace: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.4.0
    helm.sh/chart: postgresql-15.5.38
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
    nodePort: null
  selector:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
  - port: 8000
    targetPort: 3000
    protocol: TCP
    name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: linkwarden
      app.kubernetes.io/instance: linkwarden
  template:
    metadata:
      labels:
        app.kubernetes.io/name: linkwarden
        app.kubernetes.io/instance: linkwarden
    spec:
      serviceAccountName: linkwarden
      automountServiceAccountToken: false
      containers:
      - name: linkwarden
        image: ghcr.io/linkwarden/linkwarden:v2.5.3
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: linkwarden-general
        env:
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: linkwarden-secret
              key: secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: linkwarden-db
              key: uri
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        volumeMounts:
        - name: linkwarden-pv
          mountPath: /data/data
      volumes:
      - name: linkwarden-pv
        persistentVolumeClaim:
          claimName: linkwarden
      nodeSelector:
        kubernetes.io/hostname: friclu-1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: linkwarden-postgresql
  namespace: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.4.0
    helm.sh/chart: postgresql-15.5.38
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: linkwarden-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: linkwarden
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: linkwarden-postgresql
      labels:
        app.kubernetes.io/instance: linkwarden
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 16.4.0
        helm.sh/chart: postgresql-15.5.38
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: linkwarden-postgresql
      automountServiceAccountToken: false
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: linkwarden
                  app.kubernetes.io/name: postgresql
                  app.kubernetes.io/component: primary
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      hostNetwork: false
      hostIPC: false
      containers:
      - name: postgresql
        image: docker.io/bitnami/postgresql:16.4.0-debian-12-r14
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql
        - name: PGDATA
          value: /bitnami/postgresql/data
        - name: POSTGRES_USER
          value: linkwarden
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: linkwarden-postgresql
              key: password
        - name: POSTGRES_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: linkwarden-postgresql
              key: postgres-password
        - name: POSTGRES_DATABASE
          value: linkwarden
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: error
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: pgaudit
        ports:
        - name: tcp-postgresql
          containerPort: 5432
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "linkwarden" -d "dbname=linkwarden" -h 127.0.0.1 -p 5432
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "linkwarden" -d "dbname=linkwarden" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 2Gi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        volumeMounts:
        - name: empty-dir
          mountPath: /tmp
          subPath: tmp-dir
        - name: empty-dir
          mountPath: /opt/bitnami/postgresql/conf
          subPath: app-conf-dir
        - name: empty-dir
          mountPath: /opt/bitnami/postgresql/tmp
          subPath: app-tmp-dir
        - name: dshm
          mountPath: /dev/shm
        - name: data
          mountPath: /bitnami/postgresql
      volumes:
      - name: empty-dir
        emptyDir: {}
      - name: dshm
        emptyDir:
          medium: Memory
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    helm.sh/chart: linkwarden-0.3.3
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/version: 2.5.3
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - lw-friclu.duckdns.org
    secretName: lw-certificate
  rules:
  - host: ""
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: linkwarden
            port:
              number: 8000
  - host: lw-friclu.duckdns.org
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: linkwarden
            port:
              number: 8000
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: lw-certificate
  namespace: linkwarden
spec:
  secretName: lw-certificate
  duration: 2160h
  renewBefore: 360h
  subject:
    organizations:
    - friclu
  dnsNames:
  - lw-friclu.duckdns.org
  issuerRef:
    name: cert-manager-webhook-duckdns-production
    kind: ClusterIssuer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: linkwarden
  namespace: linkwarden
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /volumes/linkwarden
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: linkwarden
  labels:
    name: linkwarden
  namespace: linkwarden
spec:
  storageClassName: ""
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Namespace
metadata:
  name: linkwarden
